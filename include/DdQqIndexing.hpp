// Generated by lbm_gen_ddqq_idx.py

// Store streamed distribution functions in registers
// Modulo with wraparound for negative numbers
const int xp = ((x + 1) % nx + nx) % nx;
// x minus 1
const int xm = ((x - 1) % nx + nx) % nx;
// y plus 1
const int yp = ((y + 1) % ny + ny) % ny;
// y minus 1
const int ym = ((y - 1) % ny + ny) % ny;
// z plus 1
const int zp = ((z + 1) % nz + nz) % nz;
// z minus 1
const int zm = ((z - 1) % nz + nz) % nz;

int index[27];
index[0] = I4D(0, x, y, z, nx, ny, nz);
index[1] = I4D(1, xm, y, z, nx, ny, nz);
index[2] = I4D(2, xp, y, z, nx, ny, nz);
index[3] = I4D(3, x, ym, z, nx, ny, nz);
index[4] = I4D(4, x, yp, z, nx, ny, nz);
index[5] = I4D(5, x, y, zm, nx, ny, nz);
index[6] = I4D(6, x, y, zp, nx, ny, nz);
index[7] = I4D(7, xm, ym, z, nx, ny, nz);
index[8] = I4D(8, xp, ym, z, nx, ny, nz);
index[9] = I4D(9, xm, yp, z, nx, ny, nz);
index[10] = I4D(10, xp, yp, z, nx, ny, nz);
index[11] = I4D(11, xm, y, zm, nx, ny, nz);
index[12] = I4D(12, xp, y, zm, nx, ny, nz);
index[13] = I4D(13, xm, y, zp, nx, ny, nz);
index[14] = I4D(14, xp, y, zp, nx, ny, nz);
index[15] = I4D(15, x, ym, zm, nx, ny, nz);
index[16] = I4D(16, x, yp, zm, nx, ny, nz);
index[17] = I4D(17, x, ym, zp, nx, ny, nz);
index[18] = I4D(18, x, yp, zp, nx, ny, nz);
index[19] = I4D(19, xm, ym, zm, nx, ny, nz);
index[20] = I4D(20, xp, ym, zm, nx, ny, nz);
index[21] = I4D(21, xm, yp, zm, nx, ny, nz);
index[22] = I4D(22, xp, yp, zm, nx, ny, nz);
index[23] = I4D(23, xm, ym, zp, nx, ny, nz);
index[24] = I4D(24, xp, ym, zp, nx, ny, nz);
index[25] = I4D(25, xm, yp, zp, nx, ny, nz);
index[26] = I4D(26, xp, yp, zp, nx, ny, nz);
